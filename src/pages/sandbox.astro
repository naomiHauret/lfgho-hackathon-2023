---
import GhooeyWallet from '../sandbox/GhooeyWallet.astro'
import GhooeyWalletSummary from '../sandbox/GhooeyWalletSummary.astro'
import GhooeyAsset from '../sandbox/GhooeyAsset.astro'
import GhooeyAssetTransfer from '../sandbox/GhooeyAssetTransfer.astro'
import GhooeyUserReserveHoldings from '../sandbox/GhooeyUserReserveHoldings.astro'
import GhooeyUserAssetsBalance from '../sandbox/GhooeyUserAssetsBalance.astro'
import GhooeyLend from '../sandbox/GhooeyLend.astro'
import GhooeyBorrow from '../sandbox/GhooeyBorrow.astro'
import GhooeyRepayDebt from '../sandbox/GhooeyRepayDebt.astro'
import GhooeyWithdrawAsset from '../sandbox/GhooeyWithdrawAsset.astro'
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="/favicon.png" />
    <meta name="viewport" content="width=device-width" />
    <meta name="description" content="Unstyles sandbox widgets built with ghooey and Alpine" />
    <title>Unstyles sandbox widgets built with ghooey - toolkit to build custom Aave widgets</title>
  </head>
  <body class="flex h-full flex-col">
    <div class="mx-auto px-3 flex flex-col max-w-prose pb-24 pt-12">
      <h1 class="text-center pb-8">
        <span
          class="text-5xl font-bold block pb-[0.5ch] text-lime-500 tracking-widest hover:tracking-wide transition-all"
          >ghooey</span
        >
        <span class="text-sm text-gray-600">custom widgets examples</span>
      </h1>
      <nav class="flex flex-wrap pb-3 gap-3 mx-auto">
        <a
          class="text-lime-800 underline font-bold hover:no-underline focus:no-underline hover:text-lime-600 focus:text-lime-900"
          href="/00-overview">Docs</a
        >
        <a
          class="text-lime-800 underline font-bold hover:no-underline focus:no-underline hover:text-lime-600 focus:text-lime-900"
          href="/examples">Examples</a
        >
        <a
          class="text-lime-800 underline font-bold hover:no-underline focus:no-underline hover:text-lime-600 focus:text-lime-900"
          href="/sandbox">Sandbox</a
        >
        <a
          class="text-lime-800 underline font-bold hover:no-underline focus:no-underline hover:text-lime-600 focus:text-lime-900"
          target="_blank"
          href="https://github.com/naomiHauret/lfgho-hackathon-2024">Github</a
        >
      </nav>
      <hr />
      <div class="pt-6 grid gap-12" x-data>
        <template x-if="!$store.currentUser.account">
          <div class="flex flex-col items-center gap-3">
            <p class="text-sm text-center text-slate-600">Connect with a web3 wallet to use the demo widgets.</p>
            <button
              :class="$store.currentUser.status === 'connecting' && 'animate-pulse'"
              :aria-disabled="['connecting', 'reconnecting'].includes($store.currentUser.status) ? true : false"
              class="py-[0.35em] px-[0.5em] rounded-[0.25em] font-bold aria-[disabled]:pointer-events-none bg-lime-500 text-lime-50"
              aria-label="Connect via your web3 browser wallet (Metamask, Taho...)"
              x-text="['connecting'].includes($store.currentUser.status) ? 'Connecting...' : 'Connect'"
              @click="$store.currentUser.connect()"></button>
          </div>
        </template>
        <div class="grid gap-6 divide-y divide-neutral-200" x-data>
          <div>
            <div class="mb-8 p-6 rounded-lg bg-gray-100">
              <h1 class="font-bold text-gray-700 text-lg">Withdraw supplied assets</h1>
              <p class="text-gray-800">
                To withdraw assets from a supply position, use the `aaveWithdrawAsset` data slice. This can be used to
                build a credit widget.
              </p>
            </div>
            <GhooeyWithdrawAsset />
          </div>
          <div>
            <div class="mb-8 p-6 rounded-lg bg-gray-100">
              <h1 class="font-bold text-gray-700 text-lg">Repay debt</h1>
              <p class="text-gray-800">
                To repay debt, use the `aaveRepayDebt` data slice. This can be used to build a credit widget.
              </p>
            </div>
            <GhooeyRepayDebt />
          </div>
          <div>
            <div class="mb-8 p-6 rounded-lg bg-gray-100">
              <h1 class="font-bold text-gray-700 text-lg">Borrow asset</h1>
              <p class="text-gray-800">
                To borrow an asset, we use the `aaveBorrowReserveAsset` data slice. This can be used to build a credit
                widget.
              </p>
            </div>
            <GhooeyBorrow />
          </div>

          <div>
            <div class="mb-8 p-6 rounded-lg bg-gray-100">
              <h1 class="font-bold text-gray-700 text-lg">Supply/lend asset</h1>
              <p class="text-gray-800">
                To lend an asset, we use the `aaveSupply` data slice. This can be used to build a lending widget.
              </p>
            </div>
            <GhooeyLend />
          </div>

          <div>
            <div class="mb-8 p-6 rounded-lg bg-gray-100">
              <h1 class="font-bold text-gray-700 text-lg">Transfer asset</h1>
              <p class="text-gray-800">
                To transfer asset, we use the `erc20Transfer` data slice, which exposes the `transferToken()` function.
                This can be used to build peer-to-peer UIs, checkout button, donation button...
              </p>
            </div>
            <GhooeyAssetTransfer />
          </div>

          <div>
            <div class="mb-8 p-6 rounded-lg bg-gray-100">
              <h1 class="font-bold text-gray-700 text-lg">Asset</h1>
              <p class="text-gray-800">An asset, accessed via magic property</p>
            </div>
            <GhooeyAsset />
          </div>
          <div>
            <div class="mb-8 p-6 rounded-lg bg-gray-100">
              <h1 class="font-bold text-gray-700 text-lg">Connnect wallet</h1>
              <p class="text-gray-800">Global store that exposes the wallet that's currently connected.</p>
            </div>
            <GhooeyWallet />
          </div>
          <div>
            <div class="mb-8 p-6 rounded-lg bg-gray-100">
              <h1 class="font-bold text-gray-700 text-lg">Wallet summary (given address)</h1>
              <p class="text-gray-800">Provides a summary of a given Ethereum address' positions, borrowing power.</p>
            </div>
            <GhooeyWalletSummary walletAddress="'0xE665CEf14cB016b37014D0BDEAB4A693c3F46Cc0'" />
          </div>
          <div>
            <div class="mb-8 p-6 rounded-lg bg-gray-100">
              <h1 class="font-bold text-gray-700 text-lg">Wallet summary (current user)</h1>
              <p class="text-gray-800">Provides a summary of current user's positions, borrowing power.</p>
            </div>
            <template x-if="$store.currentUser.account">
              <GhooeyWalletSummary walletAddress="$store.currentUser.account" />
            </template>
          </div>
          <div>
            <div class="mb-8 p-6 rounded-lg bg-gray-100">
              <h1 class="font-bold text-gray-700 text-lg">Wallet holdings (current user)</h1>
              <p class="text-gray-800">Provides a summary of current user's holdings.</p>
            </div>
            <GhooeyUserReserveHoldings />
          </div>
          <div>
            <div class="mb-8 p-6 rounded-lg bg-gray-100">
              <h1 class="font-bold text-gray-700 text-lg">Wallet holdings (current user)</h1>
              <p class="text-gray-800">Provides a summary of current user's holdings.</p>
            </div>
            <GhooeyUserAssetsBalance />
          </div>
        </div>
      </div>
      <script>
        import Alpine from 'alpinejs'
        import { setupGhooey } from './../scripts/ghooey'
        window.Alpine = Alpine

        // Give ghooey elements super powers !
        setupGhooey()

        window.Alpine.start()
      </script>
    </div>
  </body>
</html>
