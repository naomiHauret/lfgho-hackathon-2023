---
import GhooeyWallet from '../components/GhooeyWallet.astro'
import GhooeyWalletSummary from '../components/GhooeyWalletSummary.astro'
import GhooeyAsset from '../components/GhooeyAsset.astro'
import GhooeyAssetTransfer from '../components/GhooeyAssetTransfer.astro'
import GhooeyUserReserveHoldings from '../components/GhooeyUserReserveHoldings.astro'
import GhooeyUserAssetsBalance from '../components/GhooeyUserAssetsBalance.astro'
import GhooeyLend from '../components/GhooeyLend.astro'
import GhooeyBorrow from '../components/GhooeyBorrow.astro'

import Instructions from './../components/Instructions.md'
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="/favicon.png" />
    <meta name="viewport" content="width=device-width" />
    <title>ghooey: drop-in UI & primitives toolkit for Aave</title>
  </head>
  <body class="bg-lime-50">
    <div class="px-3 pt-12 mx-auto max-w-prose">
      <section class="pb-12 text-gray-700">
        <h1 class="text-3xl text-center text-gray-900 pb-3 font-bold">ghooey</h1>
        <div class="[&_img]:mx-auto [&_img]:pb-6 p-3 text-md text-center rounded-lg">
          <Instructions />
        </div>
      </section>
      <div class="grid gap-6 divide-y divide-neutral-200" x-data>
        <div>
          <div class="mb-8 p-6 rounded-lg bg-gray-100">
            <h1 class="font-bold text-gray-700 text-lg">Borrow asset</h1>
            <p class="text-gray-800">
              To borrow an asset, we use the `aaveBorrowReserveAsset` data slice. This can be used to build a credit
              widget.
            </p>
          </div>
          <GhooeyBorrow />
        </div>

        <div>
          <div class="mb-8 p-6 rounded-lg bg-gray-100">
            <h1 class="font-bold text-gray-700 text-lg">Supply/lend asset</h1>
            <p class="text-gray-800">
              To lend an asset, we use the `aaveSupply` data slice. This can be used to build a lending widget.
            </p>
          </div>
          <GhooeyLend />
        </div>

        <div>
          <div class="mb-8 p-6 rounded-lg bg-gray-100">
            <h1 class="font-bold text-gray-700 text-lg">Transfer asset</h1>
            <p class="text-gray-800">
              To transfer asset, we use the `erc20Transfer` data slice, which exposes the `transferToken()` function.
              This can be used to build peer-to-peer UIs, checkout button, donation button...
            </p>
          </div>
          <GhooeyAssetTransfer />
        </div>

        <div>
          <div class="mb-8 p-6 rounded-lg bg-gray-100">
            <h1 class="font-bold text-gray-700 text-lg">Asset</h1>
            <p class="text-gray-800">An asset, accessed via magic property</p>
          </div>
          <GhooeyAsset />
        </div>
        <div>
          <div class="mb-8 p-6 rounded-lg bg-gray-100">
            <h1 class="font-bold text-gray-700 text-lg">Connnect wallet</h1>
            <p class="text-gray-800">Global store that exposes the wallet that's currently connected.</p>
          </div>
          <GhooeyWallet />
        </div>
        <div>
          <div class="mb-8 p-6 rounded-lg bg-gray-100">
            <h1 class="font-bold text-gray-700 text-lg">Wallet summary (given address)</h1>
            <p class="text-gray-800">Provides a summary of a given Ethereum address' positions, borrowing power.</p>
          </div>
          <GhooeyWalletSummary walletAddress="'0xE665CEf14cB016b37014D0BDEAB4A693c3F46Cc0'" />
        </div>
        <div>
          <div class="mb-8 p-6 rounded-lg bg-gray-100">
            <h1 class="font-bold text-gray-700 text-lg">Wallet summary (current user)</h1>
            <p class="text-gray-800">Provides a summary of current user's positions, borrowing power.</p>
          </div>
          <template x-if="$store.currentUser.account">
            <GhooeyWalletSummary walletAddress="$store.currentUser.account" />
          </template>
        </div>
        <div>
          <div class="mb-8 p-6 rounded-lg bg-gray-100">
            <h1 class="font-bold text-gray-700 text-lg">Wallet holdings (current user)</h1>
            <p class="text-gray-800">Provides a summary of current user's holdings.</p>
          </div>
          <GhooeyUserReserveHoldings />
        </div>
        <div>
          <div class="mb-8 p-6 rounded-lg bg-gray-100">
            <h1 class="font-bold text-gray-700 text-lg">Wallet holdings (current user)</h1>
            <p class="text-gray-800">Provides a summary of current user's holdings.</p>
          </div>
          <GhooeyUserAssetsBalance />
        </div>
      </div>
      <script>
        import Alpine from 'alpinejs'
        import { setupGhooey } from './../scripts/ghooey'
        window.Alpine = Alpine

        // Give ghooey elements super powers !
        setupGhooey()

        window.Alpine.start()
      </script>
    </div>
  </body>
</html>
